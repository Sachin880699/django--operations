from django.db import models
from django.contrib.auth.models import AbstractUser, BaseUserManager

class UserManager(BaseUserManager):
    def create_user(self, username, password=None):
        """
        Creates and saves a User with the given email, date of
        birth and password.
        """
        # if not phone_number:
        #     raise ValueError('Users must have an phone_number')

        user = self.model(
            username=username,
        )
        user.set_password(password)
        user.save(using=self._db)
        return user

    def create_superuser(self, username, password=None):
        """
        Creates and saves a superuser with the given email, date of
        birth and password.
        """
        user = self.create_user(
            username,
            password=password,
        )
        user.is_admin = True
        user.is_staff = True
        user.is_superuser = True
        user.save(using=self._db)
        return user





class User(AbstractUser):
    objects             = UserManager()
    username            = models.CharField(max_length=1000, null=True,unique=True )
    name                = models.CharField(max_length=1000, null=True, blank=True)
    birth_date          = models.DateField(null=True, blank=True)
    email               = models.CharField(max_length=254, null=True, blank=True )
    role                = models.CharField(max_length=1000 , null = True , blank= True , default="fidel")
    status              = models.BooleanField(default=False)
    created_at          = models.DateField(auto_now_add=True)
    USERNAME_FIELD = 'username'
    REQUIRED_FIELDS = []

    def __str__(self):
        # return str(self.phone_number) if self.phone_number else return str(self.username)
        if self.username:
            return str(self.username)
